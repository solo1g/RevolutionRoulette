/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  10: {
    RevolutionRoulette: {
      address: "0x9aE11E79cb5C7ed9E9717D85E501301186ca2D94",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Challenge",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "gameId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "actionBy",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "otherHit",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "wasLive",
              type: "bool",
            },
          ],
          name: "GameLog",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "player",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "with",
              type: "address",
            },
          ],
          name: "RecentGame",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "player2",
              type: "address",
            },
            {
              internalType: "uint16",
              name: "itemsToUse",
              type: "uint16",
            },
            {
              internalType: "uint8",
              name: "target",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "randNum",
              type: "uint256",
            },
          ],
          name: "actionsCommit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "player2",
              type: "address",
            },
          ],
          name: "actionsReveal",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "player2",
              type: "address",
            },
          ],
          name: "claimRewards",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "games",
          outputs: [
            {
              internalType: "uint8",
              name: "turn",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "liveRounds",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "blankRounds",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "status",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "betAmount",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "randNum",
                  type: "uint256",
                },
                {
                  internalType: "uint16",
                  name: "itemsToUse",
                  type: "uint16",
                },
                {
                  internalType: "uint8",
                  name: "target",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "block",
                  type: "uint256",
                },
              ],
              internalType: "struct RevolutionRoulette.RngCommit",
              name: "commitedRandHash",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint8",
                  name: "health",
                  type: "uint8",
                },
                {
                  internalType: "uint8[4]",
                  name: "items",
                  type: "uint8[4]",
                },
                {
                  internalType: "uint8",
                  name: "effects",
                  type: "uint8",
                },
              ],
              internalType: "struct RevolutionRoulette.Player",
              name: "player1",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint8",
                  name: "health",
                  type: "uint8",
                },
                {
                  internalType: "uint8[4]",
                  name: "items",
                  type: "uint8[4]",
                },
                {
                  internalType: "uint8",
                  name: "effects",
                  type: "uint8",
                },
              ],
              internalType: "struct RevolutionRoulette.Player",
              name: "player2",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "player1",
              type: "address",
            },
            {
              internalType: "address",
              name: "player2",
              type: "address",
            },
          ],
          name: "getGameId",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "player2",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "randNum",
              type: "uint256",
            },
          ],
          name: "newGameCommit",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "player2",
              type: "address",
            },
          ],
          name: "newGameReveal",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "stats",
          outputs: [
            {
              internalType: "uint32",
              name: "wins",
              type: "uint32",
            },
            {
              internalType: "uint32",
              name: "losses",
              type: "uint32",
            },
            {
              internalType: "uint256",
              name: "moneyWon",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "moneyLost",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  31337: {
    RevolutionRoulette: {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Challenge",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "gameId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "actionBy",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "otherHit",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "wasLive",
              type: "bool",
            },
          ],
          name: "GameLog",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "player",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "with",
              type: "address",
            },
          ],
          name: "RecentGame",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "player2",
              type: "address",
            },
            {
              internalType: "uint16",
              name: "itemsToUse",
              type: "uint16",
            },
            {
              internalType: "uint8",
              name: "target",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "randNum",
              type: "uint256",
            },
          ],
          name: "actionsCommit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "player2",
              type: "address",
            },
          ],
          name: "actionsReveal",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "player2",
              type: "address",
            },
          ],
          name: "claimRewards",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "games",
          outputs: [
            {
              internalType: "uint8",
              name: "turn",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "liveRounds",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "blankRounds",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "status",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "betAmount",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "randNum",
                  type: "uint256",
                },
                {
                  internalType: "uint16",
                  name: "itemsToUse",
                  type: "uint16",
                },
                {
                  internalType: "uint8",
                  name: "target",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "block",
                  type: "uint256",
                },
              ],
              internalType: "struct RevolutionRoulette.RngCommit",
              name: "commitedRandHash",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint8",
                  name: "health",
                  type: "uint8",
                },
                {
                  internalType: "uint8[4]",
                  name: "items",
                  type: "uint8[4]",
                },
                {
                  internalType: "uint8",
                  name: "effects",
                  type: "uint8",
                },
              ],
              internalType: "struct RevolutionRoulette.Player",
              name: "player1",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint8",
                  name: "health",
                  type: "uint8",
                },
                {
                  internalType: "uint8[4]",
                  name: "items",
                  type: "uint8[4]",
                },
                {
                  internalType: "uint8",
                  name: "effects",
                  type: "uint8",
                },
              ],
              internalType: "struct RevolutionRoulette.Player",
              name: "player2",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "player1",
              type: "address",
            },
            {
              internalType: "address",
              name: "player2",
              type: "address",
            },
          ],
          name: "getGameId",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "player2",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "randNum",
              type: "uint256",
            },
          ],
          name: "newGameCommit",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "player2",
              type: "address",
            },
          ],
          name: "newGameReveal",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "stats",
          outputs: [
            {
              internalType: "uint32",
              name: "wins",
              type: "uint32",
            },
            {
              internalType: "uint32",
              name: "losses",
              type: "uint32",
            },
            {
              internalType: "uint256",
              name: "moneyWon",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "moneyLost",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  11155111: {
    RevolutionRoulette: {
      address: "0x369822cC31A3d8Bff14DE74cfeB67CeB9F0a002C",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Challenge",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "gameId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "actionBy",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "otherHit",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "wasLive",
              type: "bool",
            },
          ],
          name: "GameLog",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "player",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "with",
              type: "address",
            },
          ],
          name: "RecentGame",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "player2",
              type: "address",
            },
            {
              internalType: "uint16",
              name: "itemsToUse",
              type: "uint16",
            },
            {
              internalType: "uint8",
              name: "target",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "randNum",
              type: "uint256",
            },
          ],
          name: "actionsCommit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "player2",
              type: "address",
            },
          ],
          name: "actionsReveal",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "player2",
              type: "address",
            },
          ],
          name: "claimRewards",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "games",
          outputs: [
            {
              internalType: "uint8",
              name: "turn",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "liveRounds",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "blankRounds",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "status",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "betAmount",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "randNum",
                  type: "uint256",
                },
                {
                  internalType: "uint16",
                  name: "itemsToUse",
                  type: "uint16",
                },
                {
                  internalType: "uint8",
                  name: "target",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "block",
                  type: "uint256",
                },
              ],
              internalType: "struct RevolutionRoulette.RngCommit",
              name: "commitedRandHash",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint8",
                  name: "health",
                  type: "uint8",
                },
                {
                  internalType: "uint8[4]",
                  name: "items",
                  type: "uint8[4]",
                },
                {
                  internalType: "uint8",
                  name: "effects",
                  type: "uint8",
                },
              ],
              internalType: "struct RevolutionRoulette.Player",
              name: "player1",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint8",
                  name: "health",
                  type: "uint8",
                },
                {
                  internalType: "uint8[4]",
                  name: "items",
                  type: "uint8[4]",
                },
                {
                  internalType: "uint8",
                  name: "effects",
                  type: "uint8",
                },
              ],
              internalType: "struct RevolutionRoulette.Player",
              name: "player2",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "player1",
              type: "address",
            },
            {
              internalType: "address",
              name: "player2",
              type: "address",
            },
          ],
          name: "getGameId",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "player2",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "randNum",
              type: "uint256",
            },
          ],
          name: "newGameCommit",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "player2",
              type: "address",
            },
          ],
          name: "newGameReveal",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "stats",
          outputs: [
            {
              internalType: "uint32",
              name: "wins",
              type: "uint32",
            },
            {
              internalType: "uint32",
              name: "losses",
              type: "uint32",
            },
            {
              internalType: "uint256",
              name: "moneyWon",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "moneyLost",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
